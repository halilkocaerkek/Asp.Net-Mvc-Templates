
 
 @using DataModel;
@using PagedList.Mvc;  
@using PagedList; 
@model IEnumerable<DataModel.classteacher>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Index</h2>
        <ol class="breadcrumb">
            <li class="active">
                <strong>classteacher</strong>
            </li>
        </ol>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>List of classteacher</h5>
					<div class="ibox-tools">
						@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary btn-xs"})
					</div>
                </div>
                <div class="ibox-content">

@Html.PagedListPager((IPagedList)ViewBag.OnePageOfclassteacher, page => Url.Action("Index", new { page }))

<table class="table table-striped table-bordered table-hover dataTables-example">
<thead>
    <tr>
        <th></th>
    </tr>
	</thead>
	<tbody>
@foreach (classteacher item in ViewBag.OnePageOfclassteacher) {
    <tr>
<td>
				@Html.DisplayFor(modelItem => item.teacher.name)
		</td>
<td>
				@Html.DisplayFor(modelItem => item.classid)
		</td>
<td>
				@Html.DisplayFor(modelItem => item.isClassAdmin)
		</td>
<td>
				@Html.DisplayFor(modelItem => item.isAcceptPayment)
		</td>
<td>
				@Html.DisplayFor(modelItem => item.isViewer)
		</td>
        <td>
			@Html.ActionLink("Details", "Details", new { id=item.id }, new { @class = "btn btn-primary  btn-xs btn-outline"})
            @Html.ActionLink("Edit", "Edit", new { id=item.id }, new { @class = "btn btn-white  btn-xs btn-outline"})
            @Html.ActionLink("Delete", "Delete", new { id=item.id }, new { @class = "btn btn-white  btn-xs btn-outline"})
        </td>
    </tr>
}
</tbody>
</table>
@Html.PagedListPager((IPagedList)ViewBag.OnePageOfclassteacher, page => Url.Action("Index", new { page }))

                </div>
            </div>
        </div>
    </div>
 </div>



 

